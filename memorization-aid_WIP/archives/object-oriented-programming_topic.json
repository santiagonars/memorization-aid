{"What are the 4 fundamental ideas for creating a class in object-oriented programming": "(APIE) Abstraction, Polymorphism, Inheritance, Encapsulation", "Abstraction?": "Focus on the essential qualities of something rather than one specific example", "Encapsulation?": "It is about containing the elements of an object. This is to restrict access to some of the object's components", "Polymorphism?": "Having many forms", "Inheritance?": "Enables a new class to receive or inherit the attributes or methods of existing classes", "What is Black boxing?": "One of the principles of encapsulation, that an object should not make anything about itself available", "What is Dynamic polymorphism?": "Aka run-time polymorphism. It uses the same interface for methods on different types of objects. It uses same inputs and same outputs", "What is Static polymorphism?": "AKA compile-time polymorphism. The type or number of inputs are changed. It uses method overloading to do this", "What is overriding?": "Process that allows a subclass to replace the implementation of an inherited method", "Whats is method overloading?": "When implementing multiple methods with the same name but with different parameters", "What is an abstract class?": "Exists for other classes to inherit, it cannot be instantiated, and it contains at least one abstract method", "What is a concrete class?": "AKA a final class. It meant to be instantiated and cannot be inherited or extended from", "What is aggregation?": "A collection of objects. It uses a 'has many' or 'uses many' relationship", "What relationship does inheritance use?": "'is a type of' or 'is a kind of'", "What is an interface?": "declares a set of methods for a class to implement, but itself doesnt contain any functionality/behavior", "What is a constructor?": "A special method that gets called when an object is created to help configure it", "How does multiple constructors work?": "It uses overloading, to use a method with the same name but different set fo parameters", "What is a finalizer?": "A destructor, a special method that gets called when an object is destroyed", "What is an instance variable?": "A variable in which each instantiated object of a class has a separate copy", "What is a static variable?": "AKA shared variable or class variable. It is a variable that is shared by all objects of a class", "Does Python use static keywords?": "No. Instead any variables declared outside of a method are considered to be static or class variables", "How do static methods work?": "They can only access class variables, they cannot access instance variables"}